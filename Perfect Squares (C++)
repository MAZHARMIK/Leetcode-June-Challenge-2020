class Solution {
public:
    int minimumCoinsRequiredToReachn(vector<int> nums, int n, int s){
        vector<vector<int>> t(n+1, vector<int>(s+1));
        for(int col = 0; col<s+1; col++)
            t[0][col] = INT_MAX-1;
        for(int row = 1; row<n+1; row++)
            t[row][0] = 0;

        for(int col = 1; col<s+1; col++){
            if(col%nums[0] == 0)
                t[1][col] = col/nums[0];
            else
                t[1][col] = INT_MAX-1;
        }

        for(int i = 2; i<n+1; i++){
            for(int j = 1; j<s+1; j++){
                if(nums[i-1] > j)
                    t[i][j] = t[i-1][j];
                else
                    t[i][j] = min(1 + t[i][j-nums[i-1]], t[i-1][j]);
            }
        }

        return t[n][s];
    }
    int numSquares(int n) {
        if(n == 0 || n == 1)
            return n;
        
        vector<int> nums;
        for(int i = 1; i*i<=n; i++){
            nums.push_back(i*i);
        }

        return minimumCoinsRequiredToReachn(nums, nums.size(), n);
    }
};
