class Solution {
public:
    string validateIpV4(string s1){
        if(s1.back() == '.')
            return "Neither";
        int count = 0;
        stringstream check1(s1);
        string intermediate;
        while(getline(check1, intermediate, '.')) {
            if(intermediate.length() > 3 || intermediate.length() == 0)
                return "Neither";
            if(intermediate.length() !=1 && intermediate[0] == '0')
                return "Neither";
            for(char ch:intermediate){
                //if any char is an alphabet it's "Neither"
                if ((ch >= 65 && ch <= 90)
                    || (ch >= 97 && ch <= 122))
                    return "Neither";
                //if any special symbol it's Neither
                if (!(ch >= 48 && ch <= 57))
                    return "Neither";
            }
            if(stoi(intermediate) < 0 || stoi(intermediate) > 255) {
                return "Neither";
            }
            count++;
        }
        if(count != 4)
            return "Neither";
        return "IPv4";
    }

    string validateIpV6(string s1){
        if(s1.back() == ':')
            return "Neither";
        int count = 0;
        stringstream check1(s1);
        string intermediate;
        while(getline(check1, intermediate, ':')) {
            if(intermediate.length() > 4 || intermediate.length() == 0)
                return "Neither";

            for(char ch:intermediate){
                //if any char is alphabet then is should be only a,b,c,d,e,f,A,B,C,D,E,F
                // else it Neither
                if ((ch >= 65 && ch <= 90) || (ch >= 97 && ch <= 122)){
                    ch = char(tolower(ch));
                    switch(ch) {
                      case 'a' :
                      case 'b' :
                      case 'c' :
                      case 'd' :
                      case 'e' :
                      case 'f' :
                          break;
                      default :
                         return "Neither";
                    }
                }
                else if (ch < 48 || ch > 57)
                    return "Neither";
            }
            count++;
        }
        if(count != 8)
            return "Neither";
        return "IPv6";
    }
    
    string validIPAddress(string s1) {
        if(s1.empty())
            return "Neither";

        if (s1.find('.') != std::string::npos)
            return validateIpV4(s1);
        
        if(s1.find(':') != std::string::npos)
            return validateIpV6(s1);
        
        return "Neither";

    }
};
